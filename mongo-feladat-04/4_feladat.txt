use videoStore

db.createCollection("cinemas", {
  validator: {
    $jsonSchema: {      
      properties: {
        _id: {bsonType: "int"},
        name: {bsonType: "string", pattern: "[A-Za-z0-9 ]"},
        movies: {bsonType: "array"},
        address: {
            bsonType: "object",
            properties: {
                city: {bsonType: "string"}
            }
        }        
      },
      required: ["_id", "name", "movies", "address"]
    }
  }
})

1. ?
2. db.cinemas.aggregate([
  {$lookup: {
      from: "movies",
      localField: "movies",
      foreignField: "_id",
      as: "movies"
    }
  }, {$limit: 1}
])
3. db.cinemas.aggregate([
  {$lookup: {
      from: "movies",
      localField: "movies",
      foreignField: "_id",
      as: "movies"
    }
  }, {$limit: 1}, {$project: {_id: 0, movies: 1 }}  
])
4. Már megtörtént.
5. db.directors.aggregate([
  {$lookup: {
      from: "movies",
      localField: "movies",
      foreignField: "_id",
      as: "movies"
    }
  }, {$match: {name: "James Cameron" }}, {$project: {_id: 0, movies: 1}}
])
6. db.directors.aggregate([
  {$lookup: {
      from: "movies",
      localField: "movies",
      foreignField: "_id",
      as: "movies"
    }
  }, {$match: {name: "James Cameron" }}, {$project: {_id: 0, name: 1, "movies.title": 1}}
])
7. db.movies.aggregate([    
  {$project: {_id: 0, title: 1, rateAvg: {$avg: "$ratings"}}},
  {$sort: {rateAvg: -1}},
  {$limit: 1}
])